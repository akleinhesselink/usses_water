citation()
citation("ggplot2")
##  Script to plot results from the GLMM Stan object.
##
##  Author: Andrew Tredennick
##  Date created: May 25, 2017
##  Clear everything
rm(list=ls(all.names = T))
##  Set working directory to source file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) # only for RStudio
####
####  LOAD LIBRARIES ----
####
library(tidyverse)    # Data munging
library(dplyr)        # Data summarizing
library(ggthemes)     # Pleasing ggplot themes
library(stringr)      # Working with strings
library(rstan)        # For MCMC and Stan objects
library(gridExtra)    # For combining ggplot objects
library(viridis)
####
####  LOAD DATA AND MODEL RESULTS ----
####
source("read_format_data.R") # load data
all_fit <- readRDS("../results/randcoefs_alltreatments_fit.RDS")
# year_fit <- readRDS("../results/randyears_alltreatments_fit.RDS")
####
####  CALCULATE MAX(Pr(effect) > 0, Pr(effect) < 0) FUNCTION ----
####
get_one_tailed <- function(values){
above <- 1 - ecdf(values)(0)
below <- ecdf(values)(0)
max(above,below)
}
####
####  PLOT TREATMENT-LEVEL POSTERIOR DISTRIBUTIONS ----
####
param_id_names <- data.frame(param_id = c(1,2),
param_name = c("Intercept", "Soil Moisture"))
treat_id_names <- data.frame(treat_id = c(1,2,3),
treatment = c("Control","Drought","Irrigation"))
betas <- reshape2::melt(rstan::extract(all_fit, pars="beta_treat")) %>%
rename(iteration = iterations, treat_id = Var2, param_id = Var3, estimate = value, stan_name = L1) %>%
left_join(param_id_names, by="param_id") %>%
left_join(treat_id_names, by="treat_id")
g1 <- ggplot(betas, aes(x=estimate))+
geom_hline(aes(yintercept=0), color="grey45", size=0.1)+
geom_line(stat="density",aes(color=treatment),adjust=5,size=1)+
scale_color_brewer(palette = "Set2",name="Treatment")+
scale_x_continuous(breaks=seq(-1.5,2,0.5))+
scale_y_continuous(breaks=seq(0,2,0.25))+
facet_wrap(~param_name)+
xlab("Parameter Value")+
ylab("Probability Density")+
theme_bw()+
theme(panel.grid.minor = element_blank())+
theme(legend.position = c(0.4,0.8),
legend.key.size = unit(6,"pt"),
legend.title = element_text(size=10),
legend.text = element_text(size = 8),
legend.key.height = unit(0.8,"line"),
legend.box.background = element_rect(),
strip.background = element_blank(),
strip.text = element_text(size=10))
ggsave("../figures/glmm_treatment_posteriors.png",plot = g1, width = 6, height = 3, units = "in", dpi =120)
####
####  PLOT TREATMENT DIFFERENCES BY YEAR POSTERIORS ----
####
param_id_names <- data.frame(param_id = c(1:3),
param_name = c("Control", "Drought", "Irrigation"))
year_id_names <- data.frame(year_id = c(1:5),
year_name = c(1:5))
betas <- reshape2::melt(rstan::extract(year_fit, pars="year_off")) %>%
rename(iteration = iterations, year_id = Var2, param_id = Var3, estimate = value, stan_name = L1) %>%
left_join(param_id_names, by="param_id") %>%
left_join(year_id_names, by="year_id")
betas <- reshape2::melt(rstan::extract(all_fit, pars="year_off")) %>%
rename(iteration = iterations, year_id = Var2, param_id = Var3, estimate = value, stan_name = L1) %>%
left_join(param_id_names, by="param_id") %>%
left_join(year_id_names, by="year_id")
betas <- reshape2::melt(rstan::extract(all_fit, pars="year_off"))
head(betas)
betas <- reshape2::melt(rstan::extract(all_fit, pars="year_off")) %>%
rename(iteration = iterations, year_id = Var2, estimate = value, stan_name = L1) %>%
left_join(year_id_names, by="year_id")
head(betas)
ggplot(filter(betas), aes(x=estimate))+
geom_vline(aes(xintercept=0), linetype=2, color="grey45")+
geom_line(stat="density",aes(color=as.character(year_id)),adjust=5,size=1)+
# scale_color_brewer(palette = "Set1",name="Year")+
scale_color_viridis(end=0.8,discrete=T,name="Year")+
scale_x_continuous(breaks=seq(-3,3,0.5), limits=c(-2,2))+
scale_y_continuous(breaks=seq(0,1.25,0.25))+
facet_wrap(~param_name)+
xlab("Parameter Value")+
ylab("Probability Density")+
theme_few()
ggplot(filter(betas), aes(x=estimate))+
geom_vline(aes(xintercept=0), linetype=2, color="grey45")+
geom_line(stat="density",aes(color=as.character(year_id)),adjust=5,size=1)+
# scale_color_brewer(palette = "Set1",name="Year")+
scale_color_viridis(end=0.8,discrete=T,name="Year")+
scale_x_continuous(breaks=seq(-3,3,0.5), limits=c(-2,2))+
scale_y_continuous(breaks=seq(0,1.25,0.25))+
xlab("Parameter Value")+
ylab("Probability Density")+
theme_few()
ggplot(filter(betas), aes(x=estimate))+
geom_vline(aes(xintercept=0), linetype=2, color="grey45")+
geom_line(stat="density",aes(color=as.character(year_id)),adjust=5,size=1)+
# scale_color_brewer(palette = "Set1",name="Year")+
scale_color_viridis(end=0.8,discrete=T,name="Year")+
scale_x_continuous(breaks=seq(-3,3,0.5), limits=c(-3,3))+
scale_y_continuous(breaks=seq(0,1.25,0.25))+
xlab("Parameter Value")+
ylab("Probability Density")+
theme_few()+
theme(legend.position = c(0.4,0.7),
legend.key.size = unit(10,"pt"),
legend.title = element_text(size=10),
legend.text = element_text(size = 8),
legend.key.height = unit(0.8,"line"))
ggplot(filter(betas), aes(x=estimate))+
geom_vline(aes(xintercept=0), linetype=2, color="grey45")+
geom_line(stat="density",aes(color=as.character(year_id)),adjust=5,size=1)+
# scale_color_brewer(palette = "Set1",name="Year")+
scale_color_viridis(end=0.8,discrete=T,name="Year")+
scale_x_continuous(breaks=seq(-3,3,0.5), limits=c(-3,3))+
scale_y_continuous(breaks=seq(0,1.25,0.25))+
xlab("Parameter Value")+
ylab("Probability Density")+
theme_few()+
theme(legend.position = c(2,0.7),
legend.key.size = unit(10,"pt"),
legend.title = element_text(size=10),
legend.text = element_text(size = 8),
legend.key.height = unit(0.8,"line"))
ggplot(filter(betas), aes(x=estimate))+
geom_vline(aes(xintercept=0), linetype=2, color="grey45")+
geom_line(stat="density",aes(color=as.character(year_id)),adjust=5,size=1)+
# scale_color_brewer(palette = "Set1",name="Year")+
scale_color_viridis(end=0.8,discrete=T,name="Year")+
scale_x_continuous(breaks=seq(-3,3,0.5), limits=c(-3,3))+
scale_y_continuous(breaks=seq(0,1.25,0.25))+
xlab("Parameter Value")+
ylab("Probability Density")+
theme_few()+
theme(legend.position = c(0.8,0.7),
legend.key.size = unit(10,"pt"),
legend.title = element_text(size=10),
legend.text = element_text(size = 8),
legend.key.height = unit(0.8,"line"))
ggsave("../figures/glmm_yeardiffs.png", width = 6, height = 3, units = "in", dpi =120)
ggplot(filter(betas), aes(x=estimate))+
geom_vline(aes(xintercept=0), linetype=2, color="grey45")+
geom_line(stat="density",aes(color=as.character(year_id)),adjust=5,size=1)+
# scale_color_brewer(palette = "Set1",name="Year")+
scale_color_viridis(end=0.8,discrete=T,name="Year")+
scale_x_continuous(breaks=seq(-3,3,0.5), limits=c(-3,3))+
scale_y_continuous(breaks=seq(0,1.25,0.25))+
xlab("Parameter Value")+
ylab("Probability Density")+
theme_bw()+
theme(panel.grid.minor = element_blank())+
theme(legend.position = c(0.8,0.7),
legend.key.size = unit(10,"pt"),
legend.title = element_text(size=10),
legend.text = element_text(size = 8),
legend.key.height = unit(0.8,"line"))
ggplot(filter(betas), aes(x=estimate))+
geom_vline(aes(xintercept=0), linetype=2, color="grey45")+
geom_line(stat="density",aes(color=as.character(year_id)),adjust=5,size=1)+
# scale_color_brewer(palette = "Set1",name="Year")+
scale_color_viridis(end=0.8,discrete=T,name="Year")+
scale_x_continuous(breaks=seq(-3,3,0.5), limits=c(-3,3))+
scale_y_continuous(breaks=seq(0,1.25,0.25))+
xlab("Parameter Value")+
ylab("Probability Density")+
theme_bw()+
theme(panel.grid.minor = element_blank())+
theme(legend.position = c(0.8,0.7),
legend.key.size = unit(10,"pt"),
legend.title = element_text(size=10),
legend.text = element_text(size = 8),
legend.key.height = unit(0.8,"line"),
legend.box.background = element_rect())
ggsave("../figures/glmm_yeardiffs.png", width = 6, height = 3, units = "in", dpi =120)
ggplot(filter(betas), aes(x=estimate))+
geom_vline(aes(xintercept=0), linetype=2, color="grey45")+
geom_line(stat="density",aes(color=as.character(year_id)),adjust=5,size=1)+
# scale_color_brewer(palette = "Set1",name="Year")+
scale_color_viridis(end=0.8,discrete=T,name="Year",
labels=c("1 (2012)","2 (2013)", "3 (2014)", "4 (2015)", "5 (2016)"))+
scale_x_continuous(breaks=seq(-3,3,0.5), limits=c(-3,3))+
scale_y_continuous(breaks=seq(0,1.25,0.25))+
xlab("Parameter Value")+
ylab("Probability Density")+
theme_bw()+
theme(panel.grid.minor = element_blank())+
theme(legend.position = c(0.8,0.7),
legend.key.size = unit(10,"pt"),
legend.title = element_text(size=10),
legend.text = element_text(size = 8),
legend.key.height = unit(0.8,"line"),
legend.box.background = element_rect())
ggsave("../figures/glmm_yeardiffs.png", width = 6, height = 3, units = "in", dpi =120)
ggplot(filter(betas), aes(x=estimate))+
geom_vline(aes(xintercept=0), linetype=2, color="grey45")+
geom_line(stat="density",aes(color=as.character(year_id)),adjust=5,size=1)+
# scale_color_brewer(palette = "Set1",name="Year")+
scale_color_viridis(end=0.8,discrete=T,name="Year",
labels=c("1 (2012)","2 (2013)", "3 (2014)", "4 (2015)", "5 (2016)"))+
scale_x_continuous(breaks=seq(-3,3,0.5), limits=c(-3,3))+
scale_y_continuous(breaks=seq(0,1.25,0.25))+
xlab("Parameter Value")+
ylab("Probability Density")+
theme_bw()+
theme(panel.grid.minor = element_blank())+
theme(legend.position = c(0.85,0.7),
legend.key.size = unit(10,"pt"),
legend.title = element_text(size=10),
legend.text = element_text(size = 8),
legend.key.height = unit(0.8,"line"),
legend.box.background = element_rect())
ggsave("../figures/glmm_yeardiffs.png", width = 6, height = 3, units = "in", dpi =120)
ggplot(filter(betas), aes(x=estimate))+
geom_vline(aes(xintercept=0), linetype=2, color="grey45")+
geom_line(stat="density",aes(color=as.character(year_id)),adjust=5,size=1)+
scale_color_brewer(palette = "Set1",name="Year", labels=c("1 (2012)","2 (2013)", "3 (2014)", "4 (2015)", "5 (2016)"))+
# scale_color_viridis(end=0.8,discrete=T,name="Year",
#                     labels=c("1 (2012)","2 (2013)", "3 (2014)", "4 (2015)", "5 (2016)"))+
scale_x_continuous(breaks=seq(-3,3,0.5), limits=c(-3,3))+
scale_y_continuous(breaks=seq(0,1.25,0.25))+
xlab("Parameter Value")+
ylab("Probability Density")+
theme_bw()+
theme(panel.grid.minor = element_blank())+
theme(legend.position = c(0.85,0.7),
legend.key.size = unit(10,"pt"),
legend.title = element_text(size=10),
legend.text = element_text(size = 8),
legend.key.height = unit(0.8,"line"),
legend.box.background = element_rect())
ggsave("../figures/glmm_yeardiffs.png", width = 6, height = 3, units = "in", dpi =120)
library(xtable)
sppcomp_stats <- readRDS("../results/sppcomp_stats.RDS")
sppcomp_stats
sppcomp_stats <- readRDS("../results/sppcomp_stats.RDS")
colnames(sppcomp_stats) <- c("Year", "Test", "n", "d.f.","Sums","Means","\empf{F}", "\emph{P}")
library(xtable)
# Read in species composition stats
sppcomp_stats <- readRDS("../results/sppcomp_stats.RDS")
colnames(sppcomp_stats) <- c("Year", "Test", "n", "d.f.","Sums","Means","\emph{F}", "\emph{P}")
library(xtable)
# Read in species composition stats
sppcomp_stats <- readRDS("../results/sppcomp_stats.RDS")
colnames(sppcomp_stats) <- c("Year", "Test", "n", "d.f.","Sums","Means","\\emph{F}", "\\emph{P}")
# Make the table
inyear_caption <- "Results from statistical tests for clustering and dispersion among precipitation treatments. `adonis` tests whether treatments form unique clusters in multidimensial space; `betadisper` tests whether treatments have similar dispersion. For both tests, \emph{P} values greater than 0.05 indicate there is no support that the treatments differ."
sppcomp_stats <- readRDS("../results/sppcomp_stats.RDS")
colnames(sppcomp_stats) <- c("Year", "Test", "n", "d.f.","Sums","Means","\\emph{F}", "\\emph{P}")
# Make the table
inyear_caption <- "Results from statistical tests for clustering and dispersion among precipitation treatments. `adonis` tests whether treatments form unique clusters in multidimensial space; `betadisper` tests whether treatments have similar dispersion. For both tests, \\emph{P} values greater than 0.05 indicate there is no support that the treatments differ."
print(xtable(select(sppcomp_stats, -Sums, -Means), caption = inyear_caption, digits = 2),
caption.placement="top",
include.rownames = F,
sanitize.colnames.function = identity,
comment = FALSE,
size = "normalsize")
sppcomp_stats <- readRDS("../results/sppcomp_stats.RDS")
colnames(sppcomp_stats) <- c("Year", "Test", "n", "d.f.","Sums","Means","\\emph{F}", "\\emph{P}")
# Make the table
inyear_caption <- "Results from statistical tests for clustering and dispersion among precipitation treatments. `adonis` tests whether treatments form unique clusters in multidimensial space; `betadisper` tests whether treatments have similar dispersion. For both tests, \\emph{P} values greater than 0.05 indicate there is no support that the treatments differ."
print(xtable(dplyr::select(sppcomp_stats, -Sums, -Means), caption = inyear_caption, digits = 2),
caption.placement="top",
include.rownames = F,
sanitize.colnames.function = identity,
comment = FALSE,
size = "normalsize")
str(sppcomp_stats)
